services:
  db:
    build:
      context: .
      dockerfile: Dockerfile.postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /var/lib/postgresql/data/realchar
    volumes:
      - db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: 
      context: .
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ./.env
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/postgres
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/status"]
      interval: 10s
      timeout: 5s
      retries: 5
    expose:
      - "8000"

  web:
    build:
      context: ./client/next-web/
      dockerfile: Dockerfile.dev
      args:
        NEXT_PUBLIC_FIREBASE_API_KEY: your_api_key
        NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: your_auth_domain
        NEXT_PUBLIC_FIREBASE_PROJECT_ID: your_project_id
        NEXT_PUBLIC_FIREBASE_APP_ID: your_app_id
        REACT_APP_BUILD_NUMBER: 0.0.1
        NEXT_PUBLIC_API_HOST: https://varubuntu.westus2.cloudapp.azure.com
        API_HOST: http://backend:8000
    depends_on:
      backend:
        condition: service_healthy
      db:
        condition: service_healthy
    environment:
      - NEXT_PUBLIC_FIREBASE_API_KEY=your_api_key
      - NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=your_auth_domain
      - NEXT_PUBLIC_FIREBASE_PROJECT_ID=your_project_id
      - NEXT_PUBLIC_FIREBASE_APP_ID=your_app_id
      - REACT_APP_BUILD_NUMBER=0.0.1
      - NEXT_PUBLIC_API_HOST=https://varubuntu.westus2.cloudapp.azure.com
      - API_HOST=http://backend:8000
    expose:
      - "3000"

  nginx:
    image: nginx:latest
    depends_on:
      - web
      - backend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/certs:/etc/letsencrypt
      - ./nginx/log:/var/log/nginx
    networks:
      - default

networks:
  default:
    driver: bridge

volumes:
  db:
    driver: local

